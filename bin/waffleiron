#!/usr/local/bin/bash

#
## waffleiron vars
WAFFLEIRON_DIR="$( \
  cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && \
  cd .. && pwd ; \
)" ;
SITE_NAME=$( cd $WAFFLEIRON_DIR && ./bin/env "SITE_NAME" ; ) ;
SITE_ENV=$( cd $WAFFLEIRON_DIR && ./bin/env "SITE_ENV" ; ) ;

_art () {
ccat << "EOF"
                   __________     _                
   _      ______ _/ __/ __/ /__  (_)________  ____ 
  | | /| / / __ `/ /_/ /_/ / _ \/ / ___/ __ \/ __ \
  | |/ |/ / /_/ / __/ __/ /  __/ / /  / /_/ / / / /
  |__/|__/\__,_/_/ /_/ /_/\___/_/_/   \____/_/ /_/ 

EOF
}

# help me!
_help () {
  cd $WAFFLEIRON_DIR
  echo
  _art
  echo
  echo
  echo "  ENV ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  echo
  echo "      WAFFLEIRON_DIR : $WAFFLEIRON_DIR"
  echo "           SITE_NAME : $SITE_NAME"
  echo "            SITE_ENV : $SITE_ENV"
  echo
  echo "  USAGE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  echo
  echo "      $ waffleiron help           "
  echo "                   init           "
  echo "                   i|install      "
  echo "                   restart        "
  echo "                   cc             "
  echo "                   rebuild        "
  echo "                   clean          "
  echo "                   push           "
  echo "                   pull           "
  echo "                   link           "
  echo "                   deploy         "
  echo "                   ls             "
  echo 
}

# list waffleiron project dir
_ls() {
  cd $WAFFLEIRON_DIR
  printf "\n path: $WAFFLEIRON_DIR \n\n"
  ls -la
}

# list the apps path
_paths() {
  lando ssh -s appserver -c env | grep "PATH" | cut -d '=' --complement -f 1 | tr ':' '\n'
}

# search env or list all
_env() {
  echo "  ENV ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  echo
  echo "      WAFFLEIRON_DIR : $WAFFLEIRON_DIR"
  echo "           SITE_NAME : $SITE_NAME"
  echo "            SITE_ENV : $SITE_ENV"
  echo
  echo "  PANTHEON / LANDO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  echo
  if [ -z "$1" ]
    then
      printf "      $(lando ssh -s appserver -c env | grep "$1")"
    else
      printf "      $(lando ssh -s appserver -c env)"
  fi
  echo
}

# rm sub modules i guess
_rm_submodules() {
  cd $WAFFLEIRON_DIR
  git submodule deinit --all
  git submodule | cut -c43- | while read -r line; do (git rm -f "$line"); done
  git config --local -l | grep submodule | sed -e 's/^\(submodule\.[^.]*\)\(.*\)/\1/g' | while read -r line; do (git config --local --remove-section "$line"); done
  rm -f .gitmodules
  rm -rf .git/modules
}

# deploy your mom
_deploy() {
  cd $WAFFLEIRON_DIR
  _push $@
  git add -A && git commit -m 'deployed'
  git push origin $SITE_NAME
  git push $SITE_NAME master
}

# and restart you're momm
_restart() {
  cd $WAFFLEIRON_DIR
  lando poweroff && osascript -e \'quit app "Docker"\' && printf "\nstopping docker..."
  open --background -a Docker && printf "starting docker...\n"
}

# pull yo mom
_pull () {
  cd $WAFFLEIRON_DIR
  if [ -z $1 ]
  then
    lando ssh -c "rm -f /app/database.sql.gz"
    lando terminus backup:create $1 --element=db
    lando terminus backup:get $1 --element=db --to=/app/database.sql.gz
    lando db-import database.sql.gz
    lando ssh -c "rm -f /app/database.sql.gz"
  else
    lando pull --code=none --database=dev --files=dev
  fi
}

# push yo mom
_push () {
  cd $WAFFLEIRON_DIR
  lando db-export dump.sql
  lando terminus import:database $1 https://tm.lndo.site/dump.sql.gz
}

# create-post-type yo mom
_create-post-type () {
  cd $WAFFLEIRON_DIR
  name=${1:-"change-name"}
  icon=${2:-"dashicons-text-page"}

  printf "\n\nCreating post type and plugin for $name\n\n"
  lando wp scaffold post-type $name \
    --label="$name"                 \
    --textdomain="waffleiron"       \
    --plugin="waffleiron"           \
    --dashicon="$icon"              \
    --force                  &&     \
  printf "\n\ncreation!\n\n" &&     \
  return 1
}

# rebuild yo mom
_rebuild() {
  cd $WAFFLEIRON_DIR && \
  lando poweroff && \
  lando destroy -y
}

# _install install i
_install() {
  cd $WAFFLEIRON_DIR && \
    lando ssh -c " \
      cd /app && \
      rm -rf ./vendor && \
      composer update --no-dev --no-ansi --no-interaction --optimize-autoloader
    "
  sleep 10
  lando wp plugin activate --all
}

# cc yo ma
_cc() {
  cd $WAFFLEIRON_DIR
  lando wp cache flush
}

# init function... used to be all the commands in composer.json but thats ugly dude
_init() {
  cd $WAFFLEIRON_DIR && \
  center 'burn it all down to build it back up baby!!' 2 2 && \
  _rebuild && \
  sleep 60 && \
  lando start && \
  sleep 60 && \
  _install && \
  sleep 10 && \
  _pull && \
  sleep 60 && \
  center 'waffles are done dude!' 12 16 && _cc && \
  sleep 10 && \
  printf "\n\n...all done ...\n"
}

if [ "$#" -eq 0 ]
  then
    printf "suh? no args supplied\n\n"
    _help
fi

POSITIONAL=()
while [[ $# -gt 0 ]]
  do
  key="$1"

  case $key in
    # init
    --init|init)
      _init
      shift # past argument
      shift # past value
    ;;

    # restart
    -r|r|restart)
      _restart
      shift # past argument
      shift # past value
    ;;

    # cc
    -cc|cc|--flush|--clear|--clear-cache)
      _cc
      shift # past argument
      shift # past value
    ;;

    # restart
    --rebuild|rebuild)
      _rebuild
      shift # past argument
      shift # past value
    ;;

    # restart
    -pu|--pull|pu|pull)
      _pull $2
      shift # past argument
      shift # past value
    ;;

    # push
    -p|p|push)
      _push $2
      shift # past argument
      shift # past value
    ;;

    # restart
    -c|--clean|c|clean)
      _clean
      shift # past argument
      shift # past value
    ;;

    # restart
    cpt|create-post-type)
      _create-post-type $2 $3
      shift # past argument
      shift # past value
    ;;

    # restart
    dep|deploy)
      _deploy
      shift # past argument
      shift # past value
    ;;

    # paths
    path|paths)
      _paths
      shift # past argument
      shift # past value
    ;;

    # env
    e|env)
      _env
      shift # past argument
      shift # past value
    ;;

    # install
    i|install)
      _install
      # do a harder install bro!
      if [ [$2 == "-f"] ]
        then
          _clean && _install && _restart && lando wp plugin activate --all && _cc
      fi
      shift
      shift
    ;;

     # help
    s|superpowers)
      arr=(${_cc} ${_env})
      echo ${arr[*]}

      shift # past argument
      shift
    ;;

    # help
    h|help)
      _help
      shift # past argument
    ;;

    # catch em all...
    *)
      POSITIONAL+=("$1")
      shift
    ;;
  esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters
