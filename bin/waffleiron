#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && cd .. && pwd )"

_ls() {
  cd $DIR
  printf "\n path: $DIR \n\n"
  ls -la
}

paths() {
  lando ssh -s appserver -c env | grep "PATH" | cut -d '=' --complement -f 1 | tr ':' '\n'
}

_env() {
  lando ssh -s appserver -c env | grep ""
}

_link() {
  cp -f "$DIR/wp-config.php" "$DIR/web/cms/wp-config.php"
}

clean() {
  cd $DIR
  rm -rfv vendor node_modules web/cms
  find . -maxdepth 1 ! -name util ! -name index.php -name plugins/. -delete
  printf 'clean dat ish up'
}

rm_submodules() {
  cd $DIR
  git submodule deinit --all
  git submodule | cut -c43- | while read -r line; do (git rm -f "$line"); done
  git config --local -l | grep submodule | sed -e 's/^\(submodule\.[^.]*\)\(.*\)/\1/g' | while read -r line; do (git config --local --remove-section "$line"); done
  rm -fv .gitmodules
  rm -rfv .git/modules
}

deploy() {
  cd $DIR
  travis encrypt-file .env --add
  clean
  composer install --no-dev
  p i
  lando push --code=none --database=dev --files=dev
  git add -A && git commit -m 'deployed from local to pantheon and github'
  git push origin master
  git push upstream master
}

_restart() {
  cd $DIR && lando poweroff && lando start 
}

pull() {
  cd $DIR

  site="$(./bin/env 'SITE_NAME')" || site="$(lando ssh -s appserver -c env | grep TERMINUS_SITE | cut -d '=' --complement -f 1)"
  env="$(./bin/env 'SITE_ENV')" || env="$(lando ssh -s appserver -c env | grep TERMINUS_ENV | cut -d '=' --complement -f 1)"
  
  printf "\npulling from $site.$env\n"

  lando ssh -c "rm -f /app/database.sql.gz"
  lando terminus backup:create $site.$env --element=db
  lando terminus backup:get $site.$env --element=db --to=/app/database.sql.gz
  lando db-import database.sql.gz && \
  lando ssh -c "rm -f /app/database.sql.gz"
  printf "imported db"

  lando ssh -c "rm -f /tmp/files.sql.gz"
  lando terminus backup:create $site.$env --element=files
  lando terminus backup:get $site.$env --element=files --to=/tmp/files.tar.gz
  lando ssh -c "mkdir -p /app/wp-content/uploads"
  lando ssh -c "tar -xzvf /tmp/files.tar.gz -C /app/wp-content/uploads --strip-components 1"
  lando ssh -c "rm -f /tmp/files.sql.gz"
  printf "imported files"
}

_rebuild() {
  cd $DIR
  lando destroy -y
  lando start
  pull
}

install() {
  composer install
  pnpm install
}

# init function... used to be all the commands in composer.json but thats ugly dude
init() {
  center 'clean' 12 16
  clean

  center 'remove submods' 12 16
  rm_submodules

  center 'install' 12 16
  install

  sleep 1

  center 'syms and cp' 12 16
  _links

  center 'pull' 12 16
  pull

  # center 'restart' 12 16
  # _restart

  center 'clear/flush cache' 12 16
  cc
}

cc() {
  lando ssh -c "wp cache flush --path=/app/web/cms"
}

_help() {
  echo "help       waffleiron help"
  echo "init       waffleiron init"
  echo "install    waffleiron install"
  echo "restart    waffleiron restart"
  echo "cc         waffleiron cc"
  echo "rebuild    waffleiron rebuild"
  echo "clean      waffleiron clean"
  echo "pull       waffleiron pull"
  echo "link       waffleiron link"
  echo "deploy     waffleiron deploy"
  echo "ls         waffleiron ls"
}

if [ "$#" -eq 0 ]
  then
    printf "suh? no args supplied\n"
    printf "\nwaffleiron dir:\n$DIR\n\n"
    _help
fi
#
## do your business here
for var in "$@"
do
  case "$@" in
    "help" )
      _help ;;
    "init" )
      init ;;
    "install" )
      install ;;
    "restart" )
      _restart ;;
    "cc" )
      cc ;;
    "rebuild" )
      _rebuild ;;
    "clean" )
      clean ;;
    "pull" )
      pull ;;
    "link" )
      _link ;;
    "deploy" )
      _deploy ;;
    "paths" )
      paths ;;
    "env" )
      _env ;;
    "ls" )
      _ls ;;
    * )    
      printf "suh?\n$DIR" ;;
  esac
  shift
done
