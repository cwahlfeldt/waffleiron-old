settings: {
  env_set: {

    # Privilege separation user id
    _USER: "${PRIVILEDGED_USER:+-u ${PRIVILEDGED_USER}}",

    # Size of the cache storage
    CACHE_SIZE: "${CACHE_SIZE:-2G}",
    CACHE_STORAGE: "${CACHE_STORAGE:-malloc,${CACHE_SIZE}}",

    # Cache storage
    _STORAGE: "${CACHE_STORAGE:+-s ${CACHE_STORAGE}}",

    # Address:Port
    ADDRESS_PORT: "${ADDRESS_PORT:-:6081}",
    _ADDRESS: "${ADDRESS_PORT:+-a ${ADDRESS_PORT}}",

    # Admin:Port
    _ADMIN: "${ADMIN_PORT:+-T ${ADMIN_PORT}}",

    # Custom params
    PARAM_VALUE: "${PARAM_VALUE:--p default_ttl=3600 -p default_grace=3600 -p http_resp_hdr_len=64000 -p workspace_client=128k}",
    _VALUE: "${PARAM_VALUE}",

    PARAMS: "${_USER} ${_STORAGE} ${_ADDRESS} ${_ADMIN} ${_VALUE}",

    _DNS_ENABLED: "${DNS_ENABLED:+true}",
    _DNS_DISABLED: "${DNS_ENABLED:+false}",
    _DNS_TTL: "*/${DNS_TTL:-1} * * * *"
  }
}

setup.service: {
  service_groups: INIT,
  command: "/docker-setup.sh",
}

varnish.service: {
  service_groups: IDLE,
  command: "varnishd -F -f /etc/varnish/default.vcl ${PARAMS}",
}

dns.service: {
  type: cron,
  enabled: false,
  command: "/track_dns",
  interval: "${_DNS_TTL}",
  service_groups: IDLE,
  after: varnish.service,
}

hosts.service: {
  type: cron,
  enabled: false,
  command: "/track_hosts",
  interval: "${_DNS_TTL}",
  service_groups: IDLE,
  after: varnish.service,
}

info.logging: {
  selector: '*.info',
  stdout: true
}

err.logging: {
  selector: '*.err',
  stderr: true
}
